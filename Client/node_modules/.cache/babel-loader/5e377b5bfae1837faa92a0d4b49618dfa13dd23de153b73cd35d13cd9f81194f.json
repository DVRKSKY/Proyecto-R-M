{"ast":null,"code":"import { ADD_FAV, FILTER_CARDS, ORDER_CARDS, REMOVE_FAV, RESET_FILTER, ADD_CHARACTER, REMOVE_CHARACTER, DELETE_CHARACTER } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  allCharacters: [],\n  characters: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAV:\n      //Le enviamos por payload lo que queremos actualizar\n      //De esta manera agregamos sin chancar al state global\n      //No usamos el push y pop, porque no estamos manendo el estado. sino estariamos tocando el array\n      return {\n        ...state,\n        myFavorites: [...state.myFavorites, action.payload],\n        allCharacters: [...state.allCharacters, action.payload]\n      };\n    case REMOVE_FAV:\n      const newFavorites = state.allCharacters.filter(fav => fav.id !== parseInt(action.payload));\n      return {\n        ...state,\n        myFavorites: newFavorites,\n        allCharacters: newFavorites\n      };\n    case FILTER_CARDS:\n      const newFilter = state.allCharacters.filter(ch => ch.gender === action.payload);\n      return {\n        ...state,\n        myFavorites: newFilter\n      };\n    case RESET_FILTER:\n      return {\n        ...state,\n        myFavorites: [...state.allCharacters]\n      };\n    case ORDER_CARDS:\n      //creamos una copia del arrayoriginal\n      const allCharactersCopy = [...state.allCharacters];\n      //condicionamos si es a o d\n      const orderFactor = action.payload === \"A\" ? 1 : -1;\n      //ejecutamos el ordenamiento de acuerdo al payload recibido\n      allCharactersCopy.sort((a, b) => (a.id - b.id) * orderFactor);\n      //retornmos el array ordenado\n      return {\n        ...state,\n        myFavorites: allCharactersCopy\n      };\n    case ADD_CHARACTER:\n      if (Array.isArray(action.payload)) {\n        return {\n          ...state,\n          characters: [...state.characters, ...action.payload]\n        };\n      }\n      return {\n        ...state,\n        characters: [action.payload, ...state.characters]\n      };\n    case REMOVE_CHARACTER:\n      const newCharacter = state.myFavoritesOrigin.filter(ch => ch.id !== action.payload);\n      return {\n        ...state,\n        myFavorites: newFavorites,\n        myFavoritesOrigin: newFavorites\n      };\n    case DELETE_CHARACTER:\n      const characterDeleted = state.characters.filter(ch => ch.id !== action.payload);\n      return {\n        ...state,\n        characters: characterDeleted\n      };\n    //Caso base de default\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","FILTER_CARDS","ORDER_CARDS","REMOVE_FAV","RESET_FILTER","ADD_CHARACTER","REMOVE_CHARACTER","DELETE_CHARACTER","initialState","myFavorites","allCharacters","characters","rootReducer","state","arguments","length","undefined","action","type","payload","newFavorites","filter","fav","id","parseInt","newFilter","ch","gender","allCharactersCopy","orderFactor","sort","a","b","Array","isArray","newCharacter","myFavoritesOrigin","characterDeleted"],"sources":["C:/Users/Amadeo Flores/Desktop/rick_and_morty/Client/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, FILTER_CARDS, ORDER_CARDS, REMOVE_FAV, RESET_FILTER, ADD_CHARACTER, REMOVE_CHARACTER, DELETE_CHARACTER } from \"./actions\"\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n\tallCharacters: [],\r\n\tcharacters : [],\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) =>  {\r\n\t\r\n\tswitch(action.type){\r\n\t\r\n\t\tcase ADD_FAV:\r\n\t\t\t//Le enviamos por payload lo que queremos actualizar\r\n\t\t\t//De esta manera agregamos sin chancar al state global\r\n\t\t\t//No usamos el push y pop, porque no estamos manendo el estado. sino estariamos tocando el array\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmyFavorites: [...state.myFavorites, action.payload],\r\n\t\t\t\tallCharacters: [...state.allCharacters, action.payload] \r\n\t\t\t}\r\n\r\n        case REMOVE_FAV:\r\n\t\t\tconst newFavorites = state.allCharacters.filter(fav => fav.id !== parseInt(action.payload))\r\n            return {...state, myFavorites: newFavorites, allCharacters: newFavorites}\r\n\t\t\r\n\t\tcase FILTER_CARDS:\r\n\t\t\tconst newFilter = state.allCharacters.filter(\r\n\t\t\t\t(ch) => ch.gender === action.payload\r\n\t\t\t  );\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmyFavorites: newFilter,\r\n\t\t\t};\r\n\t\tcase RESET_FILTER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmyFavorites: [...state.allCharacters],\r\n\t\t\t};\r\n\t\tcase ORDER_CARDS: \r\n\t\t\t//creamos una copia del arrayoriginal\r\n\t\t\tconst allCharactersCopy = [...state.allCharacters];\r\n\t\t\t//condicionamos si es a o d\r\n\t\t\tconst orderFactor = action.payload === \"A\" ? 1 : -1;\r\n\t\t\t//ejecutamos el ordenamiento de acuerdo al payload recibido\r\n\t\t\tallCharactersCopy.sort((a, b) => (a.id - b.id) * orderFactor);\r\n\t\t\t//retornmos el array ordenado\r\n\t\t\treturn { ...state, myFavorites: allCharactersCopy };\r\n\t\t  \r\n\t\tcase ADD_CHARACTER:\r\n\t\t\tif (Array.isArray(action.payload)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcharacters: [...state.characters, ...action.payload],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcharacters: [action.payload, ...state.characters],\r\n\t\t\t};\r\n\t\tcase REMOVE_CHARACTER:\r\n\t\t\tconst newCharacter = state.myFavoritesOrigin.filter(\r\n\t\t\t\t(ch) => ch.id !== action.payload\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmyFavorites: newFavorites,\r\n\t\t\t\tmyFavoritesOrigin: newFavorites,\r\n\t\t\t};\r\n\t\tcase DELETE_CHARACTER:\r\n\t\t\tconst characterDeleted = state.characters.filter(\r\n\t\t\t\t(ch) => ch.id !== action.payload\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcharacters: characterDeleted,\r\n\t\t\t}\r\n\t\t//Caso base de default\r\n\t\tdefault:\r\n\t\t\treturn {...state}\r\n\t}\t\r\n\r\n}\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}